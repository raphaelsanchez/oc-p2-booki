/**
 * BOOKI STYLES
 *
 * Copyright (c) 2023
 *
 * Designed by UNKNOW for OpenClassrooms
 * Developed by Raphael Sanchez <hello@raphaelsanchez.design>
 *
 * Version: 0.1
 * License: MIT
 */

/**
 * SOMMAIRE
 * 1. ROOT PROPERTIES
 * 2. SOFT RESET
 * 3. ATOMS 
 * ================================================================================ */

/**
 * 1. ROOT PROPERTIES
 * ================================================================================ */
:root {
  /* Colors Brand */
  --clr-brand-900: #0065fc;
  --clr-brand-100: #deebff;

  /* Colors Neutrals */
  --clr-neutral-900: #000000;
  --clr-neutral-300: #d9d9d9;
  --clr-neutral-200: #f2f2f2;
  --clr-neutral-100: #fff;

  /* Semantic color */
  --body-background-color: var(--clr-neutral-100);
  --body-text-color: var(--clr-neutral-000);

  /* accent color */
  /* roll out our brand colors to certain form inputs by leveraging user agent styles. */
  accent-color: var(--clr-brand-900);
}

:root {
  /* Fonts */
  --font-fallback: BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu",
    "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  --font-body: "Raleway", var(--font-fallback);
  --font-heading: var(--font-body);

  /* Line heights */
  --body-line-height: 1.5;
  --heading-line-height: 1.2;

  /* Font sizes */
  --font-size-sm: .875rem;   /* = 14px */
  --font-size-base: 1rem;   /* = 16px */
  --font-size-md: 1.125rem; /* = 18px */
  --font-size-lg: 1.375rem; /* = 24px */

  /* Font weights */
  --font-weight-normal: 400;
  --font-weight-bold: 700;

  /* Types */
  --type-h1: var(--font-weight-bold) var(--font-size-lg) /
    var(--heading-line-height) var(--font-heading);
  --type-h2: var(--font-weight-bold) var(--font-size-md) /
    var(--heading-line-height) var(--font-heading);
  --type-h3: var(--font-weight-bold) var(--font-size-base) /
    var(--heading-line-height) var(--font-heading);
  --type-body: var(--font-weight-normal) var(--font-size-base) /
    var(--body-line-height) var(--font-body);
  --type-button: var(--font-weight-bold) var(--font-size-base) /
    var(--body-line-height) var(--font-body);
  --type-input: var(--font-weight-bold) var(--font-size-base) /
    var(--body-line-height) var(--font-body);
  --type-label: var(--font-weight-bold) var(--font-size-base) /
    var(--body-line-height) var(--font-body);
}

:root {
  /* Container */
  --layout-max-width: 90rem;  /* = 1440px; */

  /* Spacing */
  --space-xxs: 0.312rem;       /* = 4px */
  --space-xs: 0.5rem;         /* = 8px */
  --space-sm: 0.625rem;       /* = 10px */
  --space-md: 1rem;           /* = 16px */
  --space-lg: 1.25rem;        /* = 20px */
  --space-xl: 1.875rem;       /* = 30px */
  --space-xxl: 2.187rem;      /* = 35px */
  --space-xxxl: 3.125rem;     /* = 50px */

  /* Border radius */
  --radius-default: 1.25rem;
  --radius-md: 1rem;
  --radius-full: 100vmax;

  /* Box shadow */
  --shadow-size: 0px 3px 15px 0px;
  --shadow-color: var(--shadow-color, rgba(0, 0, 0, 0.1))
  --shadow: var(--shadow-size) var(--shadow-color);

  /* Z-index */
  --z-index-a11y: 10000;
  --z-index-back: -1;

  /* animations */
  --transition-default: 150ms ease-in-out;
}
/**
 * 2. SOFT RESET
 * ================================================================================ */
/* makes sizing simpler */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* remove default spacing */
/* force styling of type through styling, rather than elements */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* min body height */
body {
  min-height: 100vh;
  min-height: 100dvh; /* for dynamic height support */
}

/* responsive images/videos */
:where(img, picture, svg, video) {
  display: block;
  max-width: 100%;
}

/* reset icons colors */
:where(i, svg) {
  color: inherit;
}

/* reset font sizes for all elements */
:where(input, button, textarea, select) {
  font: inherit;
}

/* reset bold element */
:where(b, strong) {
  font-weight: var(--font-weight-bold);
}

/* A11y recommended reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms !important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-duration: 0s !important;
    transition-delay: 0s !important;
  }
}

/**
 * 3. ATOMS 
 * level with the most simple components of a page, such as html tags, fonts, etc.
 *
 * - Headings
 * - Text
 * - Links
 * - Buttons
 * - Forms
 * - Buttons
 * - Pills
 * ================================================================================ */
html {
  scroll-behavior: smooth;
}

/* 1.1. Texts */
body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font: var(--type-body);
  color: var(--body-text-color);
}

/* Paragraph */
p {
  font: var(--type-body);
}

p + p {
  margin-top: var(--space-md);
}

/* hr */
hr {
  border: 0;
  height: 2px;
  margin: var(--space-lg) 0;
  background-color: currentColor;
  opacity: 0.15;
}

/* 1.2 Headings */
h1 {
  font: var(--type-h1);
}

h2 {
  font: var(--type-h2);
}

h3 {
  font: var(--type-h3);
}

/* 1.4 Links */
a {
  color: inherit;
}

a[class] {
  text-decoration: none;
}

:where(:focus-visible) {
  outline: 2px solid var(--clr-brand-900);
  outline-offset: 2px;  
}

/* 1.4 Forms */
label {
  font: var(--type-label);
  margin-bottom: var(--space-xxs);
}

:where(input, textarea) {
  display: block;
  width: 100%;
  padding: var(--space-md);
  font: var(--type-input);
  border: 2px solid var(--clr-neutral-200);
  border-radius: var(--radius-md);
}

/* 1.5 Icones */
/** 
 * Icones 
 * --------------------------------------------------------------------------------*/
 [class*="fa-"] {
  color: var(--icon-color, var(--clr-brand-900));
  line-height: var(--body-line-height);
}

[class*="fa-"]:is(.fa-neutral) {
  --icon-color: var(--clr-neutral-300);
}

/* 1.6 Buttons 
  * HTML element used to create a pill button with an icon and text inside.
  * Props:
  * - --button-padding                | default: var(--space-md)
  * - --button-color                  | default: var(--clr-brand-900)
  * - --button-color-forground        | default: var(--clr-brand-100)
  * - --button-hover-color            | default: var(--clr-brand-100)
  * - --button-hover-color-forground  | default: var(--clr-brand-100)
  * - --button-border-color           | default: var(--clr-neutral-300)
  *
  * Exemple Usage:
  * ```HTML
  * <button>Économique</button>
  * ```
  * -----------------------------------------------------------------------------  */
:where(button, .button) {
  display: inline-flex;
  gap: var(--pill-gap, var(--space-sm));
  align-items: center;
  padding: var(--button-padding, var(--space-md));
  border: 2px solid var(--button-border-color, var(--clr-brand-900));
  border-radius: var(--radius-md);
  background-color: var(--button-color, var(--clr-brand-900));
  font: var(--type-button);
  color: var(--button-color-forground, var(--clr-brand-100));
  cursor: pointer;
}

/* TODO: ask designers how should this a hover state be? */
:where(button, .button):where(:hover, :focus-visible) {
  background-color: var(--button-hover-color, var(--clr-brand-900));
}

/* 1.7 Pills 
  * HTML element used to create a pill button with an icon and text inside.
  * Props:
  * - --pill-border-color           | default: var(--clr-neutral-300)
  * - --pill-padding                | default: var(--space-md)
  * - --pill-gap                    | default: var(--space-sm) - Space between icon and text
  * - --pill-hover-background-color | default: var(--clr-brand-100)
  *
  * Exemple Usage:
  * ```HTML
  * <a href="#" class="pill">
  *   <i class="fa-solid fa-dog"></i>
  *   <span>Économique</span>
  * </a>
  * ```
  * -----------------------------------------------------------------------------  */
.pill {
  display: inline-flex;
  gap: var(--pill-gap, var(--space-sm));
  align-items: center;
  padding: var(--pill-padding, var(--space-md));
  border: 2px solid var(--pill-border-color, var(--clr-neutral-300));
  border-radius: var(--radius-full);
  font: var(--type-button);
}

.pill :where(i, svg) {
  color: var(--pill-icon-color, var(--clr-brand-900));
}

.pill:where(:hover, :focus-visible) {
  background-color: var(--pill-hover-background-color, var(--clr-brand-100));
}

/**
 * 4. MOLECULES
 * combination of atoms to form simple but more complete components. 
 * An example can be a search bar, formed by an input, a label and a search button.
 * - Cards
 * - Filters
 * - Grids
 * - Searchbar
 * ================================================================================ */

 /* 4.1 Card
  * 
  * Attrs:
  * - data-variant: stacked (default) | unstacked | unstacked-reverse
  *
  * Props:
  * --card-image-ratio        |   default: 260 / 120
  * --card-background-color   |   default: --clr-neutral-100
  *
  * Exemple Usage:
  * ```HTML
  * <article class="card" data-variant="unstacked">
  *   <figure class="card-cover">
  *     <img class="card-cover__image" src="images/activites/florian-wehde.jpg" alt="">
  *   </figure>
  *   <div class="card-content">
  *     <h3 class="card-content__title">Florian Wehde</h3>
  *     <p class="card-content__description">Auberge La Canebière <strong>25€</strong></p>
  *     ...
  *     <a href="#" class="card-link">Lire la suite</a>
  *   </div>
  * </article>
  * ```
  * -----------------------------------------------------------------------------  */
  .card {
    --shadow-color: rgb(0 0 0 / 0.15);
    position: relative;
    display: flex;
    flex-direction: column;
    border: 1px solid var(--clr-neutral-100);
    border-radius: var(--radius-default);
    background-color: var(--card-background-color, var(--clr-neutral-100));
    box-shadow: var(--shadow-size) var(--shadow-color);
    transition: box-shadow var(--transition-default);
  }

  .card:hover {
    --shadow-color: rgb(0 101 252 / 0.35);
    cursor: pointer;
  }
  
  /* Card cover */
  .card-cover {
    padding: var(--space-xxs);
    aspect-ratio: var(--card-image-ratio, 260 / 120);
  }

  .card-cover__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--card-image-radius, 
      calc(var(--radius-default) - 4px) calc(var(--radius-default) - 4px) 0 0
    );
  }

  /* Card content */
  .card-content {
    display: flex;
    gap: var(--space-xs);
    flex: 1;
    flex-direction: column;
    padding: var(--card-content-padding, var(--space-xs) var(--space-md));
  }

  .card-content__description {
    font-size: var(--font-size-sm);
  }

  .card-link {
    position: absolute;
    inset: 0;
    overflow: hidden;
    text-indent: -100%;
    pointer-events: none;
  }
  
  /* Card variants: unstacked  */
  .card[data-variant="unstacked"] {
    flex-direction: row;
  }

  .card[data-variant="unstacked"] .card-cover {
    --card-image-radius: calc(var(--radius-default) - 4px) 0 0 calc(var(--radius-default) - 4px);
    aspect-ratio: var(--card-image-ratio, 124 / 144);
    flex: 0 0 33%;
  }
  
  .card[data-variant*="unstacked"] .card-content {
    padding-block-start: var(--space-md);
  }

  /* Card variants: unstacked-reverse  */
  .card[data-variant="unstacked-reverse"] {
    flex-direction: row-reverse;
  }

  .card[data-variant="unstacked-reverse"] .card-cover {
    --card-image-radius: 0 calc(var(--radius-default) - 4px) calc(var(--radius-default) - 4px) 0;
    aspect-ratio: 124 / 144;
    flex: 0 0 33%;
  }

/** Input group
  * 
  * Attrs:
  * --input-group-padding | default: var(--space-md) pass as prop from parent
  * 
  *
  * Exemple Usage:
  * ```HTML
  * <div class="input-group">
  *   <span class="input-group__prepend"><i class="fa-solid fa-location-dot"></i></span>
  *   <input type="text" id="search" name="search" placeholder="Rechercher une localité">
  *   <button type="submit">Rechercher</button>
  * </div>
  * ```
  * -----------------------------------------------------------------------------  */ 
  .input-group {
    display: flex;
    align-items: stretch;
    border-radius: var(--radius-md);
  }

  .input-group > *:not(input) {
    flex: 0 0 auto;
    outline: none;
  }

  .input-group__prepend {
    display: flex;
    align-items: center;
    padding-block: var(--input-group-padding-block, var(--space-md));
    padding-inline: var(--input-group-padding-block, var(--space-md));
    font-size: var(--font-size-lg);
    background-color: var(--clr-neutral-200);
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }

  .input-group__prepend > * {
    color: var(--clr-neutral-900);
  }

  .input-group input {
    flex: 1;
    outline: none;
    padding-block: var(--input-group-padding-block, var(--space-md));
    padding-inline: var(--input-group-padding-inline, var(--space-md));
  }

  .input-group input + button {
    margin-left: -1px;
  }

  .input-group > :not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .input-group > :not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .input-group:focus-within {
    /* border-radius: var(--radius-md); */
    outline: 2px solid var(--clr-brand-900);
    outline-offset: 2px;
  }

/** Search form
  * 
  * Attrs: 
  * pass value to children
  * --input-group-padding-inline
  * --input-group-padding-block
  * 
  *
  * Exemple Usage:
  * ```HTML
  * <form action="" class="search-form">
  *   <label class="sr-only" for="search">Rechercher une localité</label>
  *   <div class="input-group">
  *     <span class="input-group__prepend"><i class="fa-solid fa-location-dot"></i></span>
  *     <input class="input-group__field" type="text" id="search" name="search" placeholder="Rechercher une localité">
  *   </div>
  *   <button class="input-group__button">Rechercher</button>
  * </form>
  * ```
  * -----------------------------------------------------------------------------  */ 
  .search-form {
    --input-group-padding-inline: var(--space-lg);
    --input-group-padding-block: var(--space-lg);
    display: flex;
    align-items: stretch;
    position: relative;
  }

  .search-form input {
    outline: none;
  }

  .search-form .input-group {
    flex: 1;
  }

  .search-form button {
    position: absolute;
    right: 0;
    inset-block: 0;
    margin-left: calc(var(--radius-md) * -1);
    padding-block: var(--input-group-padding-block, var(--space-md));
    padding-inline: var(--input-group-padding-inline, var(--space-md));
  } 

  .search-form button:not(:focus-visible) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /* 4.1 Nav
  * 
  * Attrs:
  * --nav-gap: (default: 0)
  * --nav-direction: (default: row)
  * --nav-align: (default: center)
  * --nav-justify: (default: flex-start)
  * --nav-link-padding: (default: .5rem 1rem)
  * --nav-link-color: (default: inherit)
  * --nav-link-color-hover: (default: --clr-brand-900)
  *
  * Exemple Usage:
  * ```HTML
  * <ul class="nav">
  *   <li class="nav__item">
  *     <a href="#" class="nav__link">Item 1</a>
  *   </li>
  *   ...
  * </ul>
  * ```
  * -----------------------------------------------------------------------------  */
  .nav {
    display: flex;
    gap: var(--nav-gap, 0);
    flex-direction: var(--nav-direction, row);
    align-items: var(--nav-align, center);
    justify-content: var(--nav-justify, flex-start);
    flex-wrap: wrap;
    list-style: none;
  }

  .nav__link {
    display: inline-flex;
    padding: var(--nav-link-padding,  var(--space-xs) var(--space-md));
    color: var(--nav-link-color, inherit);
  }

  .nav__link:hover {
    color: var(--nav-link-color-hover, var(--clr-brand-900));
  }

 /* Stars rating
  * 
  * Attrs:
  * - data-label<bool> | default: false (show note label)
  *
  * Exemple Usage:
  * ```HTML
  * <div class="rating-stars" data-label="true">
  *   <i class="rating-stars__icon fa-xs fa-solid fa-star" aria-hidden="true"></i>
  *   <i class="rating-stars__icon fa-xs fa-solid fa-star" aria-hidden="true"></i>
  *   <i class="rating-stars__icon fa-xs fa-solid fa-star" aria-hidden="true"></i>
  *   <i class="rating-stars__icon fa-xs fa-solid fa-star" aria-hidden="true"></i>
  *   <i class="rating-stars__icon fa-xs fa-solid fa-star fa-neutral" aria-hidden="true"></i>
  *   <span class="rating-stars__count" aria-label="Note de">4 sur 5</span>
  * </div>
  * ```
  * -----------------------------------------------------------------------------  */ 
.rating-stars {
  margin-top: auto;
  display: flex;
  gap: var(--space-xxs);
  align-items: center;
  line-height: 1;
}

.rating-stars__count {
  margin-left: var(--space-xs);
  /* Hide stars rating count text by default */
  text-indent: -100%;
  overflow: hidden;
}

.rating-stars[data-show-label="true"] .rating-stars__count {
  /* Show stars rating count text */
  text-indent: 0;
}

/**
 * ORGANISMS
 * ensembles formed by several molecules, corresponding to each main section 
 * of an interface, such as a menu bar, or a sidebar.
 * - Header
 * - Main
 * - Footer
 * ================================================================================ */

/**
 * TEMPLATES
 * groups of organisms correctly placed to create a page, used to visualize 
 * the disposition of each object in the page.
 * - Layout
 * - Cards grid
 * ================================================================================ */
body {
  width: min(90vw, var(--layout-max-width));
  margin-inline: auto;
}

/**
 * PAGES
 * - Home
 * ================================================================================ */

/**
 * A11Y
 * ================================================================================ */
